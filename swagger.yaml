swagger: "2.0"

################## INFO
info:
  description: "Fast Money Transfer Application"
  version: "1.0.0"
  title: "Fast-Money-Transfer"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

##################  HOST - BASE PATH - SCHEMAS
host: "localhost:8888"
basePath: "/fast-money-transfer"
schemes:
  - "http"
#- "https"

################## TAGS
tags:
  - name: "Accounts"
    description: "Everything about your Pets"
  - name: "Transfers"
    description: "Access to Petstore orders"
  - name: "Transaction"
    description: "Operations about user"

################## APIS
# GET /accounts - All Account IDs
# GET /accounts/{id} - Account Details
# GET /accounts/{id}/transactions - all created transactions
# GET /account/{id}/registered-external-accounts

# POST /transfers/external
# POST /transfers/internal
# GET /transfers - return all transfers (external and internal)


paths:
  /accounts:
    get:
      tags:
        - "Accounts"
      summary: "Get all accounts with their details"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Pet object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/Pet"
      responses:
        405:
          description: ""
          schema:
            $ref: "#/definitions/Pet"


  /accounts/{account-id}:
    get:
      tags:
        - "Accounts"
      summary: "Get all accounts with their details"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: account-id
          type: string
          required: true
          description: Numeric ID of the user to get
      responses:
        405:
          description: ""
          schema:
            $ref: "#/definitions/Pet"

################## MODEL DEFINITIONS
definitions:

  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Category"
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Tag"
  Pet:
    type: "object"
    required:
      - "name"
      - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      category:
        $ref: "#/definitions/Category"
      name:
        type: "string"
        example: "doggie"
      photoUrls:
        type: "array"
        xml:
          name: "photoUrl"
          wrapped: true
        items:
          type: "string"
      tags:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          $ref: "#/definitions/Tag"
      status:
        type: "string"
        description: "pet status in the store"
        enum:
          - "available"
          - "pending"
          - "sold"
    xml:
      name: "Pet"

